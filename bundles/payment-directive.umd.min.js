!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("payment-directive",["exports","@angular/core","@angular/common"],e):e(t["payment-directive"]={},t.ng.core,t.ng.common)}(this,function(t,n,e){"use strict";var o=function(){function t(t,e){this.el=t,this.renderer=e,this.options={},this.onCheckout=new n.EventEmitter,this.onShippingOptionChange=new n.EventEmitter,this.isPaymentSupported()?(this.items=[],this.options=Object.assign({},this.options,{supportedPaymentMethods:[{supportedMethods:"basic-card"}],paymentDetails:{total:{label:"Total",amount:{currency:"USD",value:0}},shippingOptions:[],displayItems:this.items},payerOptions:{}}),this.updatePayment()):this.renderer.setAttribute(this.el.nativeElement,"disabled","true")}return t.prototype.updatePayment=function(){this.options.paymentDetails.displayItems=this.items;var e=0;this.items.forEach(function(t){e=+parseFloat(t.amount.value)}),this.options.paymentDetails.total.amount.value=e,this.payment=new PaymentRequest(this.options.supportedPaymentMethods,this.options.paymentDetails,this.options.payerOptions),this.handleShippingChangeEvent()},t.prototype.checkout=function(){var e=this;this.updatePayment(),this.payment.show().then(function(t){t.complete(),e.onCheckout.emit(t)})["catch"](function(t){e.onCheckout.emit({error:t,success:!1})})},t.prototype.handleShippingChangeEvent=function(){var n=this;this.payment.addEventListener("shippingoptionchange",function(t){var e=t.target.shippingOption;n.options.paymentDetails.shippingOptions.forEach(function(t){t.id===e&&(t.selected=!0,console.log(n.options.paymentDetails.total.amount.value),n.options.paymentDetails.total.amount.value=parseFloat(n.options.paymentDetails.total.amount.value)+parseFloat(t.amount.value),console.log(t.amount.value),console.log(n.options.paymentDetails.total.amount.value))}),console.log(n.options.paymentDetails),t.updateWith(new Promise(function(t){n.onShippingOptionChange.emit(),t(n.options.paymentDetails)}))})},t.prototype.onClick=function(t){this.isPaymentSupported&&this.checkout()},t.prototype.isPaymentSupported=function(){return!!window.PaymentRequest},t}();o.decorators=[{type:n.Directive,args:[{selector:"[appPaymentRequest]"}]}],o.ctorParameters=function(){return[{type:n.ElementRef},{type:n.Renderer2}]},o.propDecorators={options:[{type:n.Input,args:["options"]}],items:[{type:n.Input,args:["items"]}],shippingOptions:[{type:n.Input,args:["shippingOptions"]}],onCheckout:[{type:n.Output}],onShippingOptionChange:[{type:n.Output}],onClick:[{type:n.HostListener,args:["click",["$event"]]}]};var i=function(){};i.decorators=[{type:n.NgModule,args:[{imports:[e.CommonModule],declarations:[o],exports:[o]}]}],i.ctorParameters=function(){return[]},t.PaymentRequestModule=i,t.Éµa=o,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=payment-directive.umd.min.js.map
