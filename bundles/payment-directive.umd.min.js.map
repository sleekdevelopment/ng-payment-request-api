{
  "version": 3,
  "file": "payment-directive.umd.min.js",
  "sources": [
    "ng://payment-directive/out/src/app/payment/payemnt-request.directive.ts",
    "ng://payment-directive/out/src/app/payment/payment-request.module.ts"
  ],
  "sourcesContent": [
    "import {\n  Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnInit, Output, Renderer2\n} from '@angular/core';\nimport {PaymentOptions} from './payment-models';\n\n@Directive({\n  selector: '[appPaymentRequest]'\n})\nexport class PaymentRequestDirective {\n  @Input('options') options: PaymentOptions = {};\n  @Input('items') items: PaymentItem[];\n  @Input('shippingOptions') shippingOptions : any[];\n  @Output() onCheckout = new EventEmitter();\n  @Output() onShippingOptionChange = new EventEmitter();\n  payment: PaymentRequest;\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n   if(this.isPaymentSupported()) {\n     this.items = [];\n     this.options = Object.assign({}, this.options, {\n       supportedPaymentMethods: [{supportedMethods: 'basic-card'}],\n       paymentDetails: {\n         total: {\n           label: 'Total',\n           amount: {\n             currency: 'USD',\n             value: 0\n           }\n         },\n         shippingOptions: [],\n         displayItems: this.items\n       },\n       payerOptions: {}\n     });\n\n     this.updatePayment();\n   }  else {\n     this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'true');\n   }\n\n  }\n\n  /**\n   * Update native payment request object.\n   */\n  updatePayment(): void {\n    this.options.paymentDetails.displayItems = this.items;\n    let total = 0;\n    this.items.forEach((item)=> {\n      total =+ parseFloat(<string>item.amount.value);\n    });\n    this.options.paymentDetails.total.amount.value = <any>total;\n    this.payment = new PaymentRequest(this.options.supportedPaymentMethods, this.options.paymentDetails, this.options.payerOptions);\n    this.handleShippingChangeEvent();\n  }\n\n  /**\n   * Trigger Payment request native popup\n   */\n  checkout(): void {\n    this.updatePayment();\n    this.payment.show().then((paymentResponse: PaymentResponse)=> {\n      paymentResponse.complete();\n      this.onCheckout.emit(paymentResponse);\n    }).catch((err)=> {\n      this.onCheckout.emit({\n        error: err,\n        success: false\n      });\n    })\n\n  }\n\n  /**\n   * Handle shipping option change event.\n   */\n  handleShippingChangeEvent(): void {\n    this.payment.addEventListener('shippingoptionchange', (event)=> {\n    const paymentRequest = event.target;\n    const selectedId = (<any>paymentRequest).shippingOption;\n\n    this.options.paymentDetails.shippingOptions.forEach((shippingOption)=> {\n      if(shippingOption.id === selectedId) {\n        shippingOption.selected = true;\n        console.log(this.options.paymentDetails.total.amount.value);\n        this.options.paymentDetails.total.amount.value = <any>(parseFloat(this.options.paymentDetails.total.amount.value) + parseFloat(shippingOption.amount.value));\n        console.log(shippingOption.amount.value);\n        console.log(this.options.paymentDetails.total.amount.value);\n      }\n    });\n    console.log(this.options.paymentDetails);\n      (<any>event).updateWith(new Promise((resolve)=> {\n      this.onShippingOptionChange.emit();\n      resolve(this.options.paymentDetails);\n    }));\n    });\n  }\n\n  @HostListener('click', ['$event']) onClick($event){\n    if(this.isPaymentSupported) {\n      this.checkout();\n    }\n  }\n\n  isPaymentSupported(): boolean {\n    return !!(<any>window).PaymentRequest;\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {PaymentRequestDirective} from \"./payemnt-request.directive\";\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PaymentRequestDirective],\n  exports: [PaymentRequestDirective]\n})\nexport class PaymentRequestModule { }\n"
  ],
  "names": [
    "PaymentRequestDirective",
    "el",
    "renderer",
    "this",
    "options",
    "onCheckout",
    "EventEmitter",
    "onShippingOptionChange",
    "isPaymentSupported",
    "items",
    "Object",
    "assign",
    "supportedPaymentMethods",
    "supportedMethods",
    "paymentDetails",
    "total",
    "label",
    "amount",
    "currency",
    "value",
    "shippingOptions",
    "displayItems",
    "payerOptions",
    "updatePayment",
    "setAttribute",
    "nativeElement",
    "prototype",
    "forEach",
    "item",
    "parseFloat",
    "payment",
    "PaymentRequest",
    "handleShippingChangeEvent",
    "checkout",
    "_this",
    "show",
    "then",
    "paymentResponse",
    "complete",
    "emit",
    "catch",
    "err",
    "error",
    "success",
    "addEventListener",
    "event",
    "selectedId",
    "target",
    "shippingOption",
    "id",
    "selected",
    "console",
    "log",
    "updateWith",
    "Promise",
    "resolve",
    "onClick",
    "$event",
    "type",
    "Directive",
    "args",
    "selector",
    "ElementRef",
    "Renderer2",
    "Input",
    "Output",
    "HostListener",
    "PaymentRequestModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
